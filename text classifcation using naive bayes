import nltk
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Sample data (replace this with your own dataset)
# For demonstration, we're creating two lists - one with text messages and another with their corresponding labels (0 for ham, 1 for spam)
text_messages = [
    'Free entry to win a prize!',
    'Hey, how are you?',
    'Get free money now!',
    'Meet me tomorrow at the usual place.',
    'URGENT: You have won a cash prize!',
]
labels = [1, 0, 1, 0, 1]  # 1 for spam, 0 for ham (non-spam)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(text_messages, labels, test_size=0.2, random_state=42)

# Text preprocessing and feature extraction using CountVectorizer
vectorizer = CountVectorizer()
X_train_counts = vectorizer.fit_transform(X_train)
X_test_counts = vectorizer.transform(X_test)

# Naive Bayes classifier
nb_classifier = MultinomialNB()
nb_classifier.fit(X_train_counts, y_train)

# Predictions
y_pred = nb_classifier.predict(X_test_counts)

# Evaluation
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")

print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))

print("\nClassification Report:")
print(classification_report(y_test, y_pred))
